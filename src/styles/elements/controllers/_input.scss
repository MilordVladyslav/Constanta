.constanta-input {
  position: relative;

  * {
    text-align: left;
  }

  &__container {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0 4px;

    &,
    & input {
      width: 100%;
    }

    input {
      border: none;
      background: none;
      height: 100%;
      padding: 0;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      &[type='number'] {
        -moz-appearance: textfield;
      }
    }

    svg {
      @include strict_size(16px, 16px);
    }
  }

  &__show-password {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__number-arrows {
    position: relative;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    height: 100%;
    width: 100%;
    max-width: 24px;

    border: {
      left: 1px solid;
    }

    &::after {
      content: '';

      display: block;

      position: absolute;

      top: 50%;
      left: 0;

      width: 100%;
      height: 1px;
    }

    button.number-arrow {
      display: flex;
      align-items: center;
      justify-content: center;

      height: 50%;
      width: 100%;

      svg {
        @include strict_size(12px, 12px);
      }

      &:hover {
        @include svg_color($primary_hover);
      }

      &:active {
        @include svg_color($primary_pressed);
      }
    }
  }
}

/**
  * Sizes
  */
.large.constanta-input {
  .constanta-input {
    &__container {
      padding: 0 12px;

      @include height_by_row(10);

      &.type-number {
        padding: {
          right: 0;
        }
      }

      input {
        @include font_style_body_large;
      }
    }
  }
}

.medium.constanta-input {
  .constanta-input {
    &__container {
      padding: 0 8px;

      @include height_by_row(8);

      &.type-number {
        padding: {
          right: 0;
        }
      }

      input {
        @include font_style_body_medium;
      }
    }
  }
}

.small.constanta-input {
  .constanta-input {
    &__container {
      padding: 0 4px;

      @include height_by_row(6);

      &.type-number {
        padding: {
          right: 0;
        }
      }

      input {
        @include font_style_body_small;
      }
    }
  }

  .constanta-input__number-arrows {
    button.number-arrow {
      @include strict_size(12px, 12px);
    }
  }
}

/**
  * Light theme
  */
.light.constanta-input {
  .constanta-input {
    &__container {
      background-color: $l_surface_white;

      @include input_border($l_border_clickable);

      input {
        &::placeholder {
          color: $l_text_weaker;
        }

        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus {
          -webkit-box-shadow: 0 0 0px 1000px $background_light inset;
        }
      }
    }

    &__number-arrows {
      border-color: $l_border_clickable;

      &::after {
        background-color: $l_border_clickable;
      }
    }
  }

  &.disabled {
    .constanta-input__container {
      border-color: $l_disabled_border;

      background-color: $l_disabled_background;

      input {
        color: $l_disabled_text;

        &:-webkit-autofill::selection {
          -webkit-text-fill-color: $l_disabled_text;

          background-color: $primary_default;
        }

        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus {
          -webkit-box-shadow: 0 0 0px 1000px $l_disabled_background inset;
          -webkit-text-fill-color: $l_disabled_text;
        }
      }

      svg {
        @include svg_color($l_disabled_content);
      }
    }

    .constanta-input__number-arrows {
      border-color: $l_disabled_border;

      &::after {
        background-color: $l_disabled_border;
      }

      svg {
        @include svg_color($l_disabled_content);
      }
    }
  }
}

/**
  * Dark theme
  */
.dark.constanta-input {
  .constanta-input {
    &__container {
      background-color: $background_dark;

      @include input_border($d_border_clickable);

      input {
        color: $d_text_main;

        &::placeholder {
          color: $d_text_weaker;
        }

        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus {
          -webkit-box-shadow: 0 0 0px 1000px $background_dark inset;
        }
      }

      svg:not(.color-not-change) {
        @include svg_color($d_content_gray);
      }
    }

    &__number-arrows {
      border-color: $d_border_clickable;

      &::after {
        background-color: $d_border_clickable;
      }
    }
  }

  &.disabled {
    .constanta-input__container {
      border-color: $d_disabled_border;

      background-color: $d_disabled_background;

      input {
        color: $d_disabled_text;

        &:-webkit-autofill::selection {
          -webkit-text-fill-color: $d_disabled_text;

          background-color: $primary_default;
        }

        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus {
          -webkit-box-shadow: 0 0 0px 1000px $d_disabled_background inset;
          -webkit-text-fill-color: $d_disabled_text;
        }
      }

      svg {
        @include svg_color($d_disabled_content);
      }
    }

    .constanta-input__number-arrows {
      border-color: $d_disabled_border;

      &::after {
        background-color: $d_disabled_border;
      }
    }
  }
}

/**
  * Common styles
  */
.constanta-input:not(.disabled) {
  &:hover {
    .constanta-input__container {
      border-color: $primary_hover;
    }

    .constanta-input__number-arrows {
      border-color: $primary_hover;

      &::after {
        background-color: $primary_hover;
      }
    }
  }

  &.warning {
    .constanta-input__container {
      border-color: $additional_colors_yellow_warning;

      box-shadow: $focused_warning;
    }

    .constanta-input__number-arrows {
      border-color: $additional_colors_yellow_warning;

      &::after {
        background-color: $additional_colors_yellow_warning;
      }
    }
  }

  &.errors {
    .constanta-input__container {
      border-color: $additional_colors_red_error;

      box-shadow: $focused_error;
    }

    .constanta-input__number-arrows {
      border-color: $additional_colors_red_error;

      &::after {
        background-color: $additional_colors_red_error;
      }
    }
  }

  &.focus {
    .constanta-input__container {
      border-color: $primary_hover;

      box-shadow: $focused_primary;
    }

    .constanta-input__number-arrows {
      border-color: $primary_hover;

      &::after {
        background-color: $primary_hover;
      }
    }
  }
}
